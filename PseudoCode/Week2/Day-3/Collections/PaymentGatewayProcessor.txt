
// Pseudocode: Payment Gateway Processor with Generics

class Transaction<T> {
    private T payment;

    constructor(T payment):
        this.payment = payment

    method processPayment():
        // call specific payment type details
        print "Processing payment..."
        print payment.getTransactionDetails()
}

class UPI {
    String upiId;
    double amount;
    String merchantName;

    method getTransactionDetails():
        return "Payment of " + amount + " via UPI successful for " + merchantName;
}

class Card {
    String cardNumber;
    String cvv;
    String expiryDate;
    double amount;

    method getTransactionDetails():
        return "Payment of " + amount + " via Card ending " + last4digits(cardNumber);
}

class NetBanking {
    String bankName;
    String accountNumber;
    double amount;

    method getTransactionDetails():
        return "Payment of " + amount + " via NetBanking (" + bankName + ") successful.";
}

main():
    Transaction<UPI> t1 = new Transaction<>(new UPI("user@upi",1200,"Amazon"));
    t1.processPayment();

    Transaction<Card> t2 = new Transaction<>(new Card("1234-5678-9876-5432","123","12/27",5000));
    t2.processPayment();

    Transaction<NetBanking> t3 = new Transaction<>(new NetBanking("HDFC","00112233",8000));
    t3.processPayment();
